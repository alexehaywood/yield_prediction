[FileSettings]
;LOCATION OF DESCRIPTOR FILE (path)
input_reactions_fpath = input/Doyle/reactions/rxns_smi.xlsx
;LOCATION OF OUTPUT FILES (path(s) - one per split of the data)
output_log_fpath = output/wl_kernel_wl5_activity_ranking.log
output_table_fpaths = output/results/wl_kernel/wl5/additive_ranking, output/results/wl_kernel/wl5/aryl_halide_ranking, output/results/wl_kernel/wl5/base_loo, output/results/wl_kernel/wl5/ligand_loo
output_model_fpaths = 
;NUMBER OF CORES
n_jobs = 20

[DescriptorSettings]
;TYPE OF DESCRIPTOR
;Options: descriptor_type	descriptor_settings
;		  quantum 		  	{'', }
;		  wl_kernel 	  	{'n_iter': int}
;		  tanimoto_kernel 	{fp_type: str, fps_kw={}}
;		  fingerprints 	  	{fp_type: str, fps_kw={}}
; 		  						fp_type		fps_kw
;								'rdk'		{'fpSize': int}
;								'morgan'	{'radius': int, 'useFeatures': bool, 'nBits': int}
;								'maccs'		{}
;		  one-hot 		  	{}
descriptor_type = wl_kernel
descriptor_settings = {'n_iter': 5}
;COLUMN TITLES OF DESCRIPTORS (comma-separated)
descriptor_cols = additive_smiles, aryl_halide_smiles, base_smiles, ligand_smiles
descriptor_index = [0,1,2,3]
;COLUMN TITLES OF TARGET (comma-separated)
target_col = yield_exp

[MachineLearningSettings]
;REGRESSION MODEL NAME(S) (str or comma-separated)
;Options: svr-linear_kernel
;		  svr-poly_kernel
;		  svr-RBF_kernel
;		  svr-sigmoid_kernel
;		  svr-precomputed_kernel
;		  linear_regression
;		  lasso
;		  ridge
;		  elastic_net
;		  bayesian_ridge
;		  k-nearest_neighbours
;		  random_forest
;		  gradient_boosting
;		  decision_tree
models = svr-precomputed_kernel, svr-poly_kernel, svr-RBF_kernel, svr-sigmoid_kernel, linear_regression, lasso, ridge, elastic_net, bayesian_ridge, k-nearest_neighbours, random_forest, gradient_boosting, decision_tree

[InternalSplitterSettings]
;TYPE OF DATA SPLITTER
;Options: activity_ranking {'rxn_component': 'additive', 'n_splits': 4}
;		  leave-one-component-out {'rxn_component': 'base'}
;		  cross-validation {}
;		  user-defined_mols {'rxn_component': 'additive', test_sets_mols: [['additive1', 'additive2'], ], test_sets_names=['test_1', 'test2']}
splitter = activity_ranking, activity_ranking, leave-one-component-out, leave-one-component-out
splitter_settings = [
	{'rxn_component': 'additive', 'n_splits': 4}, 
	{'rxn_component': 'aryl_halide', 'n_splits': 3}, 
	{'rxn_component': 'base'}, 
	{'rxn_component': 'ligand'}
	]
[ValidationSettings]
validation_input_fpath = 
validation_output_table_fpath = 
validation_output_model_fpath = 
pretrained_model_fpath = 
