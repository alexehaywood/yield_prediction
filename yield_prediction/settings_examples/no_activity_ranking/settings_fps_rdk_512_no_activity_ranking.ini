[FileSettings]
;LOCATION OF DESCRIPTOR FILE (path)
input_reactions_fpath = input/Doyle/reactions/rxns_smi.xlsx
;LOCATION OF OUTPUT FILES (path(s) - one per split of the data)
output_log_fpath = output/fps_rdk_512_nar.log
output_table_fpaths = output/results/fingerprints/rdk_512/additive_plates, output/results/fingerprints/rdk_512/aryl_halide_halides, output/results/fingerprints/rdk_512/aryl_halide_aryls
output_model_fpaths = 
;NUMBER OF CORES
n_jobs = 20

[DescriptorSettings]
;TYPE OF DESCRIPTOR
;Options: quantum 		  {'', }
;		  wl_kernel 	  {'n_iter': int}
;		  tanimoto_kernel {'fp_type': str, 'fps_kw': {}}
;		  fingerprints 	  {'fp_type': str, 'fps_kw': {}}
; 		  		fp_type		fps_kw
;				'rdk'		{'fpSize': int}
;				'morgan'	{'radius': int, 'useFeatures': bool, 'nBits': int}
;				'maccs'		{}
;		  one-hot 		  {}
descriptor_type = fingerprints
descriptor_settings = {'fp_type': 'rdk', 'fps_kw': {'fpSize': 1024}}
;COLUMN TITLES OF DESCRIPTORS (comma-separated)
descriptor_cols = additive_smiles, aryl_halide_smiles, base_smiles, ligand_smiles
descriptor_index = ['additive', 'aryl_halide', 'base', 'ligand']
;COLUMN TITLES OF TARGET (comma-separated)
target_col = yield_exp

[MachineLearningSettings]
;REGRESSION MODEL NAME(S) (str or comma-separated)
;Options: svr-linear_kernel
;		  svr-poly_kernel
;		  svr-RBF_kernel
;		  svr-sigmoid_kernel
;		  svr-precomputed_kernel
;		  linear_regression
;		  lasso
;		  ridge
;		  elastic_net
;		  bayesian_ridge
;		  k-nearest_neighbours
;		  random_forest
;		  gradient_boosting
;		  descision_tree
models = svr-linear_kernel, svr-poly_kernel, svr-RBF_kernel, svr-sigmoid_kernel, linear_regression, lasso, ridge, elastic_net, bayesian_ridge, k-nearest_neighbours, random_forest, gradient_boosting, decision_tree

[InternalSplitterSettings]
;TYPE OF DATA SPLITTER
;Options: activity_ranking {'rxn_component': 'additive', 'n_splits': 4}
;		  leave-one-component-out {'rxn_component': 'base'}
;		  cross-validation {}
;		  user-defined_mols {'rxn_component': 'additive', test_sets_mols: [['additive1', 'additive2'], ], test_sets_names=['test_1', 'test2']}
splitter = user-defined_mols, user-defined_mols, user-defined_mols
splitter_settings = [
	{'rxn_component': 'additive', 
	 'test_sets_mols': [[
		 '4-phenylisoxazole', '5-phenylisoxazole', '3-phenylisoxazole', 'ethyl-3-methylisoxazole-5-carboxylate', '3-methylisoxazole', 'ethyl-5-methylisoxazole-3-carboxylate'], [
		 '5-methylisoxazole', 'ethyl-isoxazole-3-carboxylate', 'benzo[c]isoxazole', 'ethyl-5-methylisoxazole-4-carboxylate', '3,5-dimethylisoxazole', 'ethyl-isoxazole-4-carboxylate', 'methyl-isoxazole-5-carboxylate', 'benzo[d]isoxazole'], [
		 '5-(2,6-difluorophenyl)isoxazole', '3-methyl-5-phenylisoxazole', 'N,N-dibenzylisoxazol-5-amine', 'N,N-dibenzylisoxazol-3-amine', '5-methyl-3-(1H-pyrrol-1-yl)isoxazole', 'methyl-5-(furan-2-yl)isoxazole-3-carboxylate', 'methyl-5-(thiophen-2-yl)isoxazole-3-carboxylate', 'ethyl-3-methoxyisoxazole-5-carboxylate']
		], 
	 'test_sets_names': ['plate_1', 'plate_2', 'plate_3']},
	 {'rxn_component': 'aryl_halide', 
	 'test_sets_mols': [[
		 '1-chloro-4-(trifluoromethyl)benzene', '1-chloro-4-methoxybenzene', '1-chloro-4-ethylbenzene', '2-chloropyridine', '3-chloropyridine'], [
		 '1-bromo-4-(trifluoromethyl)benzene', '1-bromo-4-methoxybenzene', '1-bromo-4-ethylbenzene', '2-bromopyridine', '3-bromopyridine'], [
		 '1-iodo-4-(trifluoromethyl)benzene', '1-iodo-4-methoxybenzene', '1-ethyl-4-iodobenzene', '2-iodopyridine', '3-iodopyridine']
		 ], 
	 'test_sets_names': ['halide_type_Cl', 'halide_type_Br', 'halide_type_I']},
	 {'rxn_component': 'aryl_halide', 
	 'test_sets_mols': [[
		'1-chloro-4-(trifluoromethyl)benzene', '1-bromo-4-(trifluoromethyl)benzene', '1-iodo-4-(trifluoromethyl)benzene', '1-chloro-4-methoxybenzene', '1-bromo-4-methoxybenzene', '1-iodo-4-methoxybenzene', '1-chloro-4-ethylbenzene', '1-bromo-4-ethylbenzene', '1-ethyl-4-iodobenzene'], [
		'2-chloropyridine', '2-bromopyridine', '2-iodopyridine', '3-chloropyridine', '3-bromopyridine', '3-iodopyridine']
		], 
	 'test_sets_names': ['aryl_type_phenyl', 'aryl_type_pyridyl']},
	]

[ValidationSettings]
validation_input_fpath = 
validation_output_table_fpath = 
validation_output_model_fpath = 
pretrained_model_fpath = 
